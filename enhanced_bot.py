#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import time
import logging
import requests
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler("enhanced_bot.log")
    ]
)

logger = logging.getLogger(__name__)

def main():
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = os.environ.get("TELEGRAM_BOT_TOKEN")
    if not token:
        logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω {token[:5]}...")
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –≤–µ–±—Ö—É–∫ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    try:
        logger.info("–û—Ç–∫–ª—é—á–∞–µ–º –≤–µ–±—Ö—É–∫...")
        response = requests.post(
            f"https://api.telegram.org/bot{token}/deleteWebhook",
            json={"drop_pending_updates": True}
        )
        
        if response.status_code == 200:
            result = response.json()
            logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–∞: {result}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–µ–±—Ö—É–∫–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
            check_response = requests.get(f"https://api.telegram.org/bot{token}/getWebhookInfo")
            if check_response.status_code == 200:
                webhook_info = check_response.json()
                logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ–±—Ö—É–∫–µ –ø–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è: {webhook_info}")
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞: {response.status_code} - {response.text}")
    except Exception as e:
        logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        logger.info("–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API...")
        response = requests.get(f"https://api.telegram.org/bot{token}/getMe")
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                bot_info = result["result"]
                logger.info(f"–ë–æ—Ç @{bot_info.get('username')} (ID: {bot_info.get('id')}) –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
            else:
                logger.error(f"API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {result}")
                return False
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    try:
        logger.info("–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
        response = requests.get(
            f"https://api.telegram.org/bot{token}/getUpdates",
            params={"limit": 5, "timeout": 5}
        )
        
        if response.status_code == 200:
            result = response.json()
            updates = result.get("result", [])
            logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(updates)} –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")
            
            if updates:
                for update in updates:
                    logger.info(f"–û–∂–∏–¥–∞—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {json.dumps(update, ensure_ascii=False)}")
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π update_id –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–π offset
                last_update_id = updates[-1]["update_id"]
                offset = last_update_id + 1
                logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞—á–∞–ª—å–Ω—ã–π offset={offset} –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
            else:
                offset = 0
                logger.info("–û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º offset=0")
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {response.status_code} - {response.text}")
            offset = 0
    except Exception as e:
        logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        offset = 0
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    logger.info(f"–ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å offset={offset}...")
    last_request_time = time.time()
    
    try:
        while True:
            try:
                current_time = time.time()
                time_since_last = current_time - last_request_time
                logger.debug(f"–ü—Ä–æ—à–ª–æ {time_since_last:.2f} —Å–µ–∫. —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞")
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                logger.info(f"–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å offset={offset}...")
                response = requests.get(
                    f"https://api.telegram.org/bot{token}/getUpdates",
                    params={
                        "offset": offset,
                        "timeout": 10
                    }
                )
                last_request_time = time.time()
                request_duration = last_request_time - current_time
                logger.debug(f"–ó–∞–ø—Ä–æ—Å –∑–∞–Ω—è–ª {request_duration:.2f} —Å–µ–∫.")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                if response.status_code != 200:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {response.status_code} - {response.text}")
                    time.sleep(5)
                    continue
                
                # –†–∞–∑–±–∏—Ä–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                result = response.json()
                if not result.get("ok"):
                    logger.error(f"–û—à–∏–±–∫–∞ API: {result}")
                    time.sleep(5)
                    continue
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                updates = result.get("result", [])
                logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(updates)} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
                
                if updates:
                    for update in updates:
                        logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {json.dumps(update, ensure_ascii=False)}")
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º offset
                        offset = update["update_id"] + 1
                        logger.debug(f"–û–±–Ω–æ–≤–ª–µ–Ω offset={offset}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                        if "message" not in update:
                            logger.info(f"–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è")
                            continue
                        
                        message = update["message"]
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞
                        if "text" not in message:
                            logger.info("–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞")
                            continue
                        
                        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                        chat_id = message["chat"]["id"]
                        text = message["text"]
                        user = message.get("from", {})
                        
                        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id} (user_id: {user.get('id')}): {text}")
                        
                        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
                        if text == "/start":
                            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                            name = user.get("first_name", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
                            response_text = f"üëã –ü—Ä–∏–≤–µ—Ç, {name}! –Ø —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç."
                            
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
                            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç {chat_id}")
                            send_response = requests.post(
                                f"https://api.telegram.org/bot{token}/sendMessage",
                                json={
                                    "chat_id": chat_id,
                                    "text": response_text
                                }
                            )
                            
                            if send_response.status_code == 200:
                                send_result = send_response.json()
                                if send_result.get("ok"):
                                    logger.info(f"–û—Ç–≤–µ—Ç –Ω–∞ /start —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {send_result}")
                                else:
                                    logger.error(f"API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {send_result}")
                            else:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {send_response.status_code} - {send_response.text}")
                        
                        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /ping
                        elif text == "/ping":
                            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º pong –≤ —á–∞—Ç {chat_id}")
                            send_response = requests.post(
                                f"https://api.telegram.org/bot{token}/sendMessage",
                                json={
                                    "chat_id": chat_id,
                                    "text": f"pong! –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞: {datetime.now().strftime('%H:%M:%S')}"
                                }
                            )
                            
                            if send_response.status_code == 200:
                                logger.info("Pong —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                            else:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ pong: {send_response.status_code} - {send_response.text}")
                        
                        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /info
                        elif text == "/info":
                            info_text = (
                                f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n"
                                f"- ID –±–æ—Ç–∞: 1023647955\n"
                                f"- –ò–º—è: @check_vin_avtobot\n"
                                f"- –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}\n"
                                f"- –¢–µ–∫—É—â–∏–π offset: {offset}\n"
                                f"- –í–∞—à ID: {user.get('id')}\n"
                                f"- –í–∞—à username: @{user.get('username', '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}"
                            )
                            
                            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —á–∞—Ç {chat_id}")
                            send_response = requests.post(
                                f"https://api.telegram.org/bot{token}/sendMessage",
                                json={
                                    "chat_id": chat_id,
                                    "text": info_text
                                }
                            )
                            
                            if send_response.status_code == 200:
                                logger.info("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
                            else:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {send_response.status_code} - {send_response.text}")
                        
                        # –õ—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                        else:
                            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç—Ö–æ-–æ—Ç–≤–µ—Ç –≤ —á–∞—Ç {chat_id}")
                            send_response = requests.post(
                                f"https://api.telegram.org/bot{token}/sendMessage",
                                json={
                                    "chat_id": chat_id,
                                    "text": f"–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏: {text}"
                                }
                            )
                            
                            if send_response.status_code == 200:
                                logger.info("–≠—Ö–æ-–æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                            else:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —ç—Ö–æ-–æ—Ç–≤–µ—Ç–∞: {send_response.status_code} - {send_response.text}")
                else:
                    logger.debug("–û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
                
                # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
                if not updates:
                    time.sleep(1)
            
            except KeyboardInterrupt:
                logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞")
                break
            
            except Exception as e:
                logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}", exc_info=True)
                time.sleep(5)
    
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    
    logger.info("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
    return True

if __name__ == "__main__":
    main()