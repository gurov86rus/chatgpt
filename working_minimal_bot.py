#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import logging
import asyncio
import requests
import time
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler("working_minimal_bot.log")
    ]
)

logger = logging.getLogger(__name__)

class SimpleTelegramBot:
    def __init__(self, token):
        self.token = token
        self.api_url = f"https://api.telegram.org/bot{token}/"
        self.last_update_id = 0
        self.running = False
        
    def send_request(self, method, params=None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API Telegram"""
        url = f"{self.api_url}{method}"
        try:
            if params:
                response = requests.post(url, json=params)
            else:
                response = requests.get(url)
            response.raise_for_status()
            return response.json()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞ {method}: {e}")
            return None
            
    def get_me(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
        return self.send_request("getMe")
        
    def delete_webhook(self):
        """–£–¥–∞–ª—è–µ—Ç –≤–µ–±—Ö—É–∫"""
        return self.send_request("deleteWebhook", {"drop_pending_updates": True})
        
    def get_updates(self, offset=None, timeout=30):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
        params = {"timeout": timeout}
        if offset:
            params["offset"] = offset
        result = self.send_request("getUpdates", params)
        if result and result.get("ok") and "result" in result:
            return result["result"]
        return []
        
    def send_message(self, chat_id, text):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        params = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": "HTML"
        }
        return self.send_request("sendMessage", params)
        
    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ API...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        me_info = self.get_me()
        if not me_info or not me_info.get("ok"):
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ")
            return
            
        bot_info = me_info["result"]
        logger.info(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @{bot_info.get('username')} (ID: {bot_info.get('id')})")
        
        # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫
        webhook_result = self.delete_webhook()
        if not webhook_result or not webhook_result.get("ok"):
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤–µ–±—Ö—É–∫")
            return
            
        logger.info("–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        self.running = True
        while self.running:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                updates = self.get_updates(offset=self.last_update_id + 1)
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                for update in updates:
                    self.last_update_id = update["update_id"]
                    
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                    if "message" in update and "text" in update["message"]:
                        message = update["message"]
                        chat_id = message["chat"]["id"]
                        text = message["text"]
                        
                        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
                        if text == "/start":
                            user = message.get("from", {})
                            full_name = f"{user.get('first_name', '')} {user.get('last_name', '')}".strip()
                            
                            response_text = (
                                f"üëã –ü—Ä–∏–≤–µ—Ç, {full_name}!\n\n"
                                f"–Ø –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤.\n"
                                f"–ß–µ—Ä–µ–∑ –º–µ–Ω—è –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –∑–∞–ø—Ä–∞–≤–∫–∏ –∏ —Ä–µ–º–æ–Ω—Ç—ã.\n\n"
                                f"–í–∞—à ID: {user.get('id')}"
                            )
                            
                            self.send_message(chat_id, response_text)
                        else:
                            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                            self.send_message(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã")
                            
            except KeyboardInterrupt:
                logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
                self.running = False
                break
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
                import traceback
                logger.error(traceback.format_exc())
                time.sleep(5)  # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π

def kill_existing_bots():
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞"""
    try:
        os.system("pkill -f 'python.*bot' || true")
        time.sleep(2)  # –ñ–¥–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–æ–≤: {e}")

def main():
    logger.info("–ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ Telegram...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = os.environ.get("TELEGRAM_BOT_TOKEN")
    if not token:
        logger.critical("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
        
    logger.info(f"–¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å {token[:5]}...")
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–æ—Ç—ã
    kill_existing_bots()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    bot = SimpleTelegramBot(token)
    bot.run()

if __name__ == "__main__":
    main()